program: (block)*
block: func | ife | ifne | whilee | whilene | statement_list
func: func_name LBR formparams RBR LCBR func_statement_list RCBR
ife: IFE LBR var RBR LCBR statement_list RCBR
ifne: IFNE LBR var RBR LCBR statement_list RCBR
whilee: WHIE LBR var RBR LCBR statement_list RCBR
whilene: WHINE LBR var RBR LCBR statement_list RCBR
formparams: (formvar COMMA)* formvar | EMP
var: ID
formvar: ID
func_statement_list: (func_statement | statement)*
statement_list: (statement)*
func_statement: RET expr SEMICOL
statement: assign SEMICOL | funcall SEMICOL | LCOMM COMMENT RCOMM | EMP
assign: var ASSIGN expr
funcall: func_name LBR actparams RBR
func_name: ID
actparams: (expr COMMA)* expr | EMP
expr: (expr | term) (UNION | INTER | DIFF | SYMDIFF) (expr | term)
term: funcall | var | set | LBR expr RBR
set: LSBR actparams RSBR



LBR and RBR - round brackets ( and )
LCBR and RCBR - curly brackets { and }
LCOMM and RCOMM - /* and */
LSBR and RSBR - square brackets [ and ]
IFE - "ife"
IFNE - "ifne"
WHIE - "whilee"
WHINE - "whilene"
RET - "return"
COMMA - comma ,
SEMICOL - semicolon ;
EMP - empty
ID - name of function or variable
ASSIGN - equality sign =
UNION, INTER, DIFF and SYMDIFF - union sign +, intersection sign *, difference sign -, and symmetric difference sign ~